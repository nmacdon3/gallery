import Head from "next/head";
import Image from "next/image";
import { Dispatch, SetStateAction, useState } from "react";
import { useGetImages } from "./api/images";
import { TfiLayoutSliderAlt } from "react-icons/tfi";
import { BsGrid } from "react-icons/bs";
import classnames from "classnames";
import { IconType } from "react-icons";

type ViewType = "list" | "gallery";

const ViewToggleIcon = ({
  icon,
  isToggled,
}: {
  icon: { value: IconType };
  isToggled: boolean;
}) => {
  return (
    <icon.value
      className={classnames(
        "h-6 w-6 transition-all duration-500 ease-in-out",
        isToggled ? "text-black" : "text-white/50 hover:text-white"
      )}
    />
  );
};

const ViewToggle = ({
  view,
  setView,
}: {
  view: ViewType;
  setView: Dispatch<SetStateAction<ViewType>>;
}) => {
  return (
    <div className="flex gap-8 rounded-full bg-black px-4 py-2 w-28 h-14 relative">
      <div
        className={classnames(
          "bg-white rounded-full h-10 w-10 absolute top-2 z-0 transition-all ease-in-out duration-500",
          view === "gallery" ? "-translate-x-2" : "translate-x-12"
        )}
      ></div>
      <button className="z-10" onClick={() => setView("gallery")}>
        <ViewToggleIcon
          icon={{ value: BsGrid }}
          isToggled={view === "gallery"}
        />
      </button>
      <button className="z-10" onClick={() => setView("list")}>
        <ViewToggleIcon
          icon={{ value: TfiLayoutSliderAlt }}
          isToggled={view === "list"}
        />
      </button>
    </div>
  );
};

export default function Home() {
  const images = useGetImages();
  const [view, setView] = useState<ViewType>("gallery");
  console.log("ðŸš€ ~ file: index.tsx:63 ~ Home ~ view:", view);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="p-10">
        <header>
          <ViewToggle view={view} setView={setView} />
        </header>
        {view === "gallery" ? (
          <div className="flex justify-center w-full ">
            <div className="grid grid-cols-3 gap-10  items-center">
              {images.data?.map((img) => (
                <div key={img.name}>
                  <Image
                    className="object-cover"
                    src={img.src}
                    alt={img.name}
                    height={200}
                    width={400}
                  />
                  {/* <b>{img.name}</b> */}
                </div>
              ))}
            </div>
          </div>
        ) : (
          <div className="flex items-center h-screen gap-24 overflow-x-scroll pl-96 snap-x">
            {images.data?.map((img) => (
              <div key={img.name} className="w-96 shrink-0 snap-center">
                <Image
                  className="object-cover"
                  src={img.src}
                  alt={img.name}
                  height={600}
                  width={600}
                />
                {/* <b>{img.name}</b> */}
              </div>
            ))}
          </div>
        )}
      </main>
    </>
  );
}
